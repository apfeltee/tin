/**
 * This program stresses method calls, memory sustainability
 * and looping.
 *
 * Part of Promit Test Suit, location /test/Benchmark/BinaryTrees.Promit
 * 
 * Created by SD Asif Hossein in 21th June, 2022 (Tuesday) at 01:31 PM (UTC +06).
 */

// This program doesn't make that much sense.
// But hey, atleast it can benchmark.

class Tree {
	init(value, depth) {
		// Set the value and depth.

		this.depth = depth;
		this.value = value;

		if(depth > 0)
        {
            // Create left and right nodes.
            this.left  = Tree(value - 1, depth - 1);
            this.right = Tree(2 * value + 1, depth - 1);
        }
        else
        {
            this.left  = null;
            this.right = null;
        }
    }

	check()
    {
        // If current tree/node is a leaf node, just
        // return the value.
        if(!this.left)
        {
            return this.value;
        }
        return this.value + this.right.check() - this.left.check();
    }
};

var mindepth = 4;
var maxdepth = 14/1;

var stretchdepth = maxdepth + 1;

println($"Min depth : {mindepth}, max depth : {maxdepth} and stretched depth : {stretchdepth}");
println("Starting benchmark...");


println($"Check 1 : {Tree(0, stretchdepth).check()}");

// Long lived tree will be benchmarked later.

var ancient = Tree(0, maxdepth);

// Maximum number of trees/nodes (BT) in max depth.

var totaltrees = 1;

for(var i = 0; i < maxdepth; i++) 
	totaltrees *= 2;

var checkcnt = 2;

for(var i = mindepth ; i < maxdepth; i += 2)
{
    var checkval = 0;

    for(var j = 0; j < totaltrees; j++) 
    {
        checkval += Tree(j, i).check() + Tree(-j, i).check();    
    }
    println($"Number of trees : {totaltrees * 2}");
    println($"Current running depth : {i}");
    checkcnt++;
    actualval = (checkval == null) ? "(no value)" : checkval;
    println($"Check {checkcnt} : {actualval}");
    totaltrees /= 4;
}

// Checking ancient, which been there for long.
// The "ancient" variable checks the sustainability.

println($"Long lived tree depth : {maxdepth}");
println($"Check {checkcnt} : {ancient.check()}");

println("Benchmarking finished!");
